// Generated by CoffeeScript 1.6.3
var _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Batbelt.DashboardController = (function(_super) {
  __extends(DashboardController, _super);

  function DashboardController() {
    this._updateStats = __bind(this._updateStats, this);
    _ref = DashboardController.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  DashboardController.prototype.routingKey = 'dashboard';

  DashboardController.accessor('statKeys', function() {
    var _ref1;
    return (_ref1 = this.get('stats')) != null ? _ref1.keys() : void 0;
  });

  DashboardController.prototype.index = function() {
    this.set('stats', new Batman.Hash);
    return this._updateStats();
  };

  DashboardController.prototype._updateStats = function() {
    var stats,
      _this = this;
    stats = this.get('stats');
    return Batbelt.sendMessage({
      type: 'stats'
    }, function(results) {
      var count, stat;
      for (stat in results) {
        if (!__hasProp.call(results, stat)) continue;
        count = results[stat];
        stats.set(stat, count);
      }
      return setTimeout(_this._updateStats, 1000);
    });
  };

  return DashboardController;

})(Batman.Controller);
