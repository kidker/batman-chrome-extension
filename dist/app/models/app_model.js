// Generated by CoffeeScript 1.6.2
(function() {
  var _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Batbelt.AppModel = (function(_super) {
    __extends(AppModel, _super);

    function AppModel() {
      _ref = AppModel.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AppModel.resourceName = 'app_model';

    AppModel.primaryKey = 'name';

    AppModel.persist(Batbelt.Storage);

    AppModel.encode('name');

    AppModel.hasMany('instances', {
      name: 'AppModelInstance'
    });

    return AppModel;

  })(Batman.Model);

  Batbelt.AppModelInstance = (function(_super) {
    __extends(AppModelInstance, _super);

    function AppModelInstance() {
      _ref1 = AppModelInstance.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    AppModelInstance.resourceName = 'instance';

    AppModelInstance.persist(Batbelt.Storage);

    AppModelInstance.mixin(Batbelt.AppObservable);

    AppModelInstance.encode('properties', {
      decode: function(obj) {
        var key, properties, value;

        properties = new Batman.Set;
        for (key in obj) {
          value = obj[key];
          properties.add(new Batman({
            key: key,
            value: value
          }));
        }
        return properties;
      }
    });

    AppModelInstance.belongsTo('app_model');

    return AppModelInstance;

  })(Batman.Model);

}).call(this);
